// To get started, press Ctrl+Space (or Option+Esc) to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https://docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https://docs.nordicsemi.com/bundle/nrf-connect-vscode/page/guides/ncs_configure_app.html#devicetree-support-in-the-extension


/ {
	servo: servo {
		compatible = "pwm-servo";
		pwms = <&pwm0 0 PWM_NSEC(333) PWM_POLARITY_NORMAL>;
		min-pulse = <PWM_NSEC(100)>;
		max-pulse = <PWM_USEC(2500)>;
	};
};

&i2c0 {
    status = "okay";
    pinctrl-0 = <&i2c0_default>;
	pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
    HM01B0: HM01B0@24{
        compatible = "i2c-device";
        status = "okay";
        reg = < 0x24 >;
        vsync-gpios = <&gpio0 27 0>;
        
    };
};



&spi0 {
    compatible = "nordic,nrf-spis"; 
    status = "disabled";
    pinctrl-0 = <&spi1_default>;
    pinctrl-1 = <&spi1_sleep>;
    pinctrl-names = "default", "sleep";
    def-char = <0>;
};
&i2c1 { status = "disabled";}; 
&spi1 {
 compatible = "nordic,nrf-spis";
 status = "okay";
 pinctrl-0 = <&spi1_default>;
 pinctrl-1 = <&spi1_sleep>;
 pinctrl-names = "default", "sleep";
 def-char = <0>;
 gendev: gendev@0 {
    compatible = "adi,adxl362";
    reg = <0>;
    spi-max-frequency = <36000000>;
};
};




&pwm0 {
	status = "disabled";
	pinctrl-0 = <&pwm0_custom>;
	pinctrl-1 = <&pwm0_csleep>;
	pinctrl-names = "default", "sleep";
   };

&pinctrl {
    spi1_default: spi1_default {
    group1 {
    psels = <NRF_PSEL(SPIS_SCK, 0, 15)>,
						<NRF_PSEL(SPIS_MOSI, 0, 16)>,
						<NRF_PSEL(SPIS_MISO, 0, 14)>,
						<NRF_PSEL(SPIS_CSN, 0, 7)>;
    };
};
    spi1_sleep: spi1_sleep {
    group1 {
    psels = <NRF_PSEL(SPIS_SCK, 0, 15)>,
						<NRF_PSEL(SPIS_MOSI, 0, 16)>,
						<NRF_PSEL(SPIS_MISO, 0, 14)>,
                        <NRF_PSEL(SPIS_CSN, 0, 7)>;
    low-power-enable;
    };
};

    pwm0_custom: pwm0_custom {
	group1 {
	psels = <NRF_PSEL(PWM_OUT0, 0, 3)>;
	nordic,invert;
	};
	};  pwm0_csleep: pwm0_csleep {
	group1 {
	psels = <NRF_PSEL(PWM_OUT0, 0, 3)>;
	low-power-enable;
	};
	};
};




&uart0 {
    compatible = "nordic,nrf-uarte";
    current-speed = <921600>;
};


/{
    aliases {
        hmm = &HM01B0;
    };
};



&feather_header {
    gpio-map = <0 0 &gpio0 2 0>,
               <1 0 &gpio0 3 0>,
               <2 0 &gpio0 4 0>,
               <3 0 &gpio0 5 0>,
               <4 0 &gpio0 28 0>,
               <5 0 &gpio0 29 0>,
               <6 0 &gpio0 12 0>,
               <7 0 &gpio0 13 0>,
               <8 0 &gpio0 14 0>,
               <9 0 &gpio0 8 0>,
               <10 0 &gpio0 6 0>,
               <11 0 &gpio0 20 0>,
               <12 0 &gpio0 25 0>,
               <13 0 &gpio0 26 0>,
               <14 0 &gpio0 27 0>,
               <15 0 &gpio0 30 0>,
               <16 0 &gpio0 31 0>,
               <17 0 &gpio0 11 0>,
               <18 0 &gpio0 7 0>,
               <19 0 &gpio0 15 0>,
               <20 0 &gpio0 16 0>;
};